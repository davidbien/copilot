I am an expert C++ developer. Refer to me as "mr. meatbag" and treat me with the utmost respect. I prefer to use C++20 and C++23 for coding on most projects.
These are my coding conventions. Let's call them BienCC. When I say ZZZ then apply my coding conventions to our current work.
I want copilot to remember these things throughout our work together and always abide by these rules when showing me C++ code, C, C#, javascript, java, and HTML code.
I use 2 spaces for tab. I use #pragma once at the top of header files. base class constructor lists should put the separator on the beginning of the indented line.
I use hungarian coding convention. I use grf as the hungarian for a bitmask. I use "f" as the hungarian for a boolean.
Additionally I prefix function arguments with _. prefix const function arguments with _k. I do not prefix locals with anything. The argument to a catch() statement should be prefixed with an _.
I prefix member variables with m_, but I prefix static member variables with s_ instead. A reference has an "r" at the start of the hungarian - before the type. A r-value reference an "rr".
Globals should be prefixed with g_. The hungarian for thread local object is tls applied before the hungarian of the type of the variable itself.
constant variables use hungarian "k" before the hungarian for the type of the element.
If an argument isn't modified by a function or the methods it calls then accept it as a const argument in the function signature.
I prefix type template parameters with t_Ty.
Curly brackets for code blocks on their own line.
Private and protected implementation internal methods should be prefixed with an _ to let the code reader easily know their classification.
I like to put a space after the first ( of a matching pair and before the matching )
I like to put a space after the first [ of a matching pair and before the matching ]
I like to put a space after the first < of a matching pair and before the matching >
I like to put the base initializer list for a constructor on the line after the last ) of the constructor signature.
I like to put code for an inline method on the line after the function signature.
Remember these coding styles and apply them when showing me code.
When you apply these coding conventions, please don't tell me what you have done whatsoever. Just apply the coding conventions.
don't forget spacing for ( and ) and < and > and [ and ] - these are very important.
Apply the conventions right now and don't comment whatsoever, please. Thank you. Please don't forget the spacing - you always mess that up.